Система моделирования процесса управления объектом, представленным в виде апериодического звена, 
посредством ПИ-регулирования состоит из трех приложений: "math_model", "control_system", "logger".

Для работы системы необходимо запустить все три приложения в произвольном порядке.

Каждое приложение запускается со своим набором аргументов.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				"math_model"
Приложение состоит из TCP-сервера, принимающего сигналы управления от  "control_system",
 и TCP-клиента, передающего сигналы обратной связи в "control_system". 
Цель приложения: расчет реакции апериодического звена на управляющее воздействие.

В качестве аргументов "math_model" принимает входной порт, выходной
порт, постоянную времени, коэффициент усиления и период итерирования (дискретизации):
./math_model -i [in_port] -o [out_port] --Tm [time_const] --Km [gain] -t [period]

Порядок ввода аргументов не важен, в случае если аргументы были указаны не верно, приложение выведет сообщение:
"error: Wrong arguments!" и выставит вышеперечисленные значения в дефолтные (указанные в задании на разработку как пример).

Далее, приложение начинает инициализацию TCP-сервера и TCP-клиента.
В случае удачных инициализаций и подключений, приложение выведет сообщение: "status: Ready".
Для начала процесса моделирования пользователю необходимо ввести команду "start", 
далее ввести интервал времени моделирования в секундах, 
для бесконечного процесса моделирования необходимо указать время моделирования "0".
- наблюдаем процесс моделирования с выводом значений сигналов в терминал.
По оканчинию процесса моделирования (если запущен не бесконечный цикл), приложение выведет сообщение "Cycle ended".
Если был запущен бесконечный процесс моделирования и необходимо прекратить процесс, то необходимо прервать выполнение программы.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				"control_system"
Приложение состоит из TCP-сервера, принимающего сигналы обратной связи от  "math_model",
TCP-клиента, передающего сигналы управления в "math_model", 
TCP-клиента, передающего сигналы с результатами расчета по каждой итерации в "logger".
Цель приложения: расчет сигнала управления ПИ-регулятора по входному сигналу (ref) и обратной связи от "math_model".

В качестве аргументов "control_system" принимает входной порт, выходной порт, порт логгера, 
значение входного сигнала, коэффициенты регулятора и период итерирования (дискретизации):
./control_system -i [in_port] -o [out_port] -l [log_port] --ref [reference_value] --kp [prop] --ki [integ] -t [period]

Порядок ввода аргументов не важен, в случае если аргументы были указаны не верно, приложение выведет сообщение:
"error: Wrong arguments!" и выставит вышеперечисленные значения в дефолтные (указанные в задании на разработку как пример).

Далее, приложение начинает инициализацию TCP-сервера и двух TCP-клиентов.
В случае удачных инициализаций и подключений, приложение выведет сообщение: "status: Ready".

После этого, приложение готово принимать сигналы от "math_model" и производить необходимые расчеты.
- наблюдаем процесс моделирования с выводом значений сигналов в терминал.
Приложение самостоятельно не завершает работу так, как находится в постоянном ожидании сигналов от "math_model",
следовательно, если необходимо прекратить процесс, то необходимо прервать выполнение программы.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				"logger"
Приложение состоит из TCP-сервера, принимающего сигналы с результатами расчета по каждой итерации от "control_system",
Цель приложения: запись в файл-лог результаты по каждой произведенной итерации расчета.

В качестве аргументов приложение принимает входной порт и путь к файлу, в который нужно записывать данные:
./logger -i [in_port] -p [path]

Порядок ввода аргументов не важен, в случае если аргументы были указаны не верно, приложение выведет сообщение:
"error: Wrong arguments!" и выставит вышеперечисленные значения в дефолтные (указанные в задании на разработку как пример).

Далее, приложение начинает инициализацию TCP-сервера.
В случае удачных инициализаций и подключений, приложение выведет сообщение: "status: Ready".

После этого, приложение готово принимать сигналы от "control_system" и производить запись в файл, указанный в аргументе.
- наблюдаем процесс моделирования с выводом значений сигналов по каждой итерации в терминал.
Приложение самостоятельно не завершает работу так, как находится в постоянном ожидании сигналов от "control_system",
следовательно, если необходимо прекратить процесс, то необходимо прервать выполнение программы.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Внимание: если одно из трех приложений остановит свою работу (или работа приложения была прервана пользователем), 
то процесс моделирования останавливается полностью.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------